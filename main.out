\BOOKMARK [0][-]{chapter.1}{1 Introduction}{}
\BOOKMARK [1][-]{section.1.1}{1.1 LHC Phase 2 conditions}{chapter.1}
\BOOKMARK [1][-]{section.1.2}{1.2 HGCAL description}{chapter.1}
\BOOKMARK [1][-]{section.1.3}{1.3 Clustering overview}{chapter.1}
\BOOKMARK [1][-]{section.1.4}{1.4 HLT for HGCAL needs}{chapter.1}
\BOOKMARK [1][-]{section.1.5}{1.5 Computation challanges}{chapter.1}
\BOOKMARK [0][-]{chapter.2}{2 Parallel computing}{}
\BOOKMARK [1][-]{section.2.1}{2.1 Principles of parallel computing}{chapter.2}
\BOOKMARK [2][-]{subsection.2.1.1}{2.1.1 Moore's law}{section.2.1}
\BOOKMARK [2][-]{subsection.2.1.2}{2.1.2 Amdahl's Law}{section.2.1}
\BOOKMARK [1][-]{section.2.2}{2.2 Architectures}{chapter.2}
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 CPU architecture}{section.2.2}
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 GPU architecture}{section.2.2}
\BOOKMARK [1][-]{section.2.3}{2.3 CUDA C}{chapter.2}
\BOOKMARK [2][-]{subsection.2.3.1}{2.3.1 Threads and Memory Hierarchy}{section.2.3}
\BOOKMARK [2][-]{subsection.2.3.2}{2.3.2 Memory management}{section.2.3}
\BOOKMARK [2][-]{subsection.2.3.3}{2.3.3 Streams}{section.2.3}
\BOOKMARK [1][-]{section.2.4}{2.4 Testing hardware}{chapter.2}
\BOOKMARK [0][-]{chapter.3}{3 K-Dimensional binary search tree}{}
\BOOKMARK [1][-]{section.3.1}{3.1 General description of the KD-tree}{chapter.3}
\BOOKMARK [2][-]{subsection.3.1.1}{3.1.1 Building a 3D tree}{section.3.1}
\BOOKMARK [2][-]{subsection.3.1.2}{3.1.2 Traversing a 3D tree}{section.3.1}
\BOOKMARK [1][-]{section.3.2}{3.2 Volume kd-tree}{chapter.3}
\BOOKMARK [2][-]{subsection.3.2.1}{3.2.1 Tree building}{section.3.2}
\BOOKMARK [2][-]{subsection.3.2.2}{3.2.2 Range search}{section.3.2}
\BOOKMARK [1][-]{section.3.3}{3.3 Validation}{chapter.3}
\BOOKMARK [1][-]{section.3.4}{3.4 GPU porting}{chapter.3}
\BOOKMARK [1][-]{section.3.5}{3.5 Performance analysis}{chapter.3}
\BOOKMARK [1][-]{section.3.6}{3.6 Algorithm assessment}{chapter.3}
\BOOKMARK [0][-]{chapter.4}{4 A better KD-tree implementation}{}
\BOOKMARK [1][-]{section.4.1}{4.1 Build of a left-balanced KD-tree}{chapter.4}
\BOOKMARK [1][-]{section.4.2}{4.2 Iterative range search}{chapter.4}
\BOOKMARK [2][-]{subsection.4.2.1}{4.2.1 Fast bitwise operations}{section.4.2}
\BOOKMARK [1][-]{section.4.3}{4.3 Validation}{chapter.4}
\BOOKMARK [1][-]{section.4.4}{4.4 GPU porting}{chapter.4}
\BOOKMARK [2][-]{subsection.4.4.1}{4.4.1 GPU queue}{section.4.4}
\BOOKMARK [2][-]{subsection.4.4.2}{4.4.2 CUDA streams}{section.4.4}
\BOOKMARK [1][-]{section.4.5}{4.5 Performance analysis}{chapter.4}
\BOOKMARK [2][-]{subsection.4.5.1}{4.5.1 Uniform random distribution}{section.4.5}
\BOOKMARK [2][-]{subsection.4.5.2}{4.5.2 HGCAL simulated RecHits}{section.4.5}
\BOOKMARK [1][-]{section.4.6}{4.6 Algorithm assessment}{chapter.4}
\BOOKMARK [2][-]{subsection.4.6.1}{4.6.1 Build complexity}{section.4.6}
\BOOKMARK [2][-]{subsection.4.6.2}{4.6.2 CPU sequential search time}{section.4.6}
\BOOKMARK [2][-]{subsection.4.6.3}{4.6.3 GPU parallel search time}{section.4.6}
\BOOKMARK [2][-]{subsection.4.6.4}{4.6.4 Speedup}{section.4.6}
\BOOKMARK [0][-]{chapter.5}{5 Energy consumption}{}
\BOOKMARK [1][-]{section.5.1}{5.1 Measurement methodology}{chapter.5}
\BOOKMARK [1][-]{section.5.2}{5.2 Benchmark machine}{chapter.5}
\BOOKMARK [2][-]{subsection.5.2.1}{5.2.1 CPU energy consumption}{section.5.2}
\BOOKMARK [2][-]{subsection.5.2.2}{5.2.2 GPU energy consumption}{section.5.2}
\BOOKMARK [1][-]{section.5.3}{5.3 NVIDIDA Tegra K1}{chapter.5}
\BOOKMARK [2][-]{subsection.5.3.1}{5.3.1 TK1 CPU energy consumption}{section.5.3}
\BOOKMARK [2][-]{subsection.5.3.2}{5.3.2 TK1 GPU energy consumption}{section.5.3}
\BOOKMARK [1][-]{section.5.4}{5.4 Consumption comparisons}{chapter.5}
\BOOKMARK [0][-]{chapter.6}{6 Conclusions}{}
\BOOKMARK [0][-]{chapter*.4}{Summary}{}
\BOOKMARK [0][-]{chapter*.5}{Bibliography}{}
